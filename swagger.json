{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Favorite movies API",
        "description": "Favorite movies API"
    },
    "components": {
        "securitySchemes": {
            "bearerToken": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "Register": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "email@example.com"
                    },
                    "password": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "example": "2000-01-01"
                    }
                }
            },
            "Login": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "email@example.com"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "email@example.com"
                    }
                }
            },
            "PasswordChange": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    }
                }
            },
            "Movie":{
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "runtime": {
                        "type": "string",
                        "example": "150min"
                    },
                    "budget": {
                        "type": "number"
                    },
                    "gross": {
                        "type": "number"
                    },
                    "overallRating": {
                        "type": "number"
                    },
                    "releaseDate": {
                        "type": "string",
                        "example": "2000-01-01"
                    },
                    "ProductionCompanyId": {
                        "type": "integer"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/MovieCategory"
                        }
                    }
                }
            },
            "MovieCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": ["name"]
            },
            "ProductionCompany": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": ["name"]
            },
            "Actor": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "fbProfileLink": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "shortDescription": {
                        "type": "string"
                    },
                    "nationality": {
                        "type": "string"
                    },
                    "awards": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/Award"
                        }
                    },
                    "studies": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/Studies"
                        }
                    }
                }
            },
            "Studies": {
                "type": "object",
                "properties": {
                    "institutionId": {
                        "type": "integer"
                    },
                    "degreeId": {
                        "type": "integer"
                    },
                    "graduationYear": {
                        "type": "integer"
                    }
                }
            },
            "Institution": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "institution": {
                        "type": "string"
                    }
                }
            },
            "Degree": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "degree": {
                        "type": "string"
                    }
                }
            },
            "Award": {
                "type": "object",
                "properties": {
                    "awardId": {
                        "type": "integer"
                    },
                    "year": {
                        "type": "integer"
                    },
                    "movie": {
                        "type": "string"
                    },
                    "movieCharacter": {
                        "type": "string"
                    }
                }
            },
            "AwardType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "awardName": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerToken": []
        }
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "Api for authentication"
        },
        {
            "name": "Movies",
            "description": "Api for movies"
        },
        {
            "name": "Production companies",
            "description": "Api for production companies"
        },
        {
            "name": "Actors",
            "description": "Api for actors"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Register a new account",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/Register"
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Login",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/Login"
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully."
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "operationId": "login"
            }
        },
        "/auth/confirm-account": {
            "get": {
                "tags": ["Authentication"],
                "summary": "Confirm your account",
                "responses": {
                    "200": {
                        "description": "Account confirmed"
                    }
                },
                "operationId": "confirmAccount",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/auth/resend-confirmation-email": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Resend confirmation email",
                "responses": {
                    "200": {
                        "description": "Email sent."
                    }
                },
                "operationId": "resendConfirmationEmail",
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/Email"
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Reset your password",
                "responses": {
                    "200": {
                        "description": "Password reset link sent via email."
                    }
                },
                "operationId": "sendPasswordResetRequest",
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/Email"
                            }
                        }
                    }
                }
            }
        },
        "/auth/change-password": {
            "post": {
                "tags": ["Authentication"],
                "summary": "Change your password",
                "responses": {
                    "200": {
                        "description": "Change your password"
                    }
                },
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/PasswordChange"
                            }
                        }
                    }
                }
            }
        },
        "/api/movies": {
            "get": {
                "tags": ["Movies"],
                "summary": "Get movies",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "operationId": "getMovies",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            },
            "post": {
                "tags": ["Movies"],
                "summary": "Add a movie",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "operationId": "postMovie",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/Movie"
                            }
                        }
                    }
                }
            }
        },
        "/api/movies/{id}": {
            "get": {
                "tags": ["Movies"],
                "summary": "Get a movie by id",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "operationId": "getMovieById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            },
            "put": {
                "tags": ["Movies"],
                "summary": "Update a movie by id",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "operationId": "updateMovie",
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/Movie"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Movies"],
                "summary": "Delete a movie by id",
                "responses": {
                    "204":{
                        "description": "Successfully deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "operationId": "deleteMovie",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            } 
        },
        "/api/movies/movie-categories": {
            "get": {
                "tags": ["Movies"],
                "summary": "Get movie categories",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "operationId": "getMovieCategories"
            }
        },
        "/api/production-companies": {
            "get": {
                "tags": ["Production companies"],
                "summary": "Get production companies",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "operationId": "getProductionCompanies"
            },
            "post": {
                "tags": ["Production companies"],
                "summary": "Add a production company",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "operationId": "postProductionCompany",
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/ProductionCompany"
                            }
                        }
                    }
                }
            }
        },
        "/api/production-companies/{id}": {
            "get": {
                "tags": ["Production companies"],
                "summary": "Get a production company by id",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "operationId": "getProductionCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            },
            "put": {
                "tags": ["Production companies"],
                "summary": "Update a production company by id",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "operationId": "updateProductionCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/ProductionCompany"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Production companies"],
                "summary": "Delete a production company by id",
                "responses": {
                    "204":{
                        "description": "Successfully deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "operationId": "deleteProductionCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            }
        },
        "/api/actors": {
            "get": {
                "tags": ["Actors"],
                "summary": "Get actors",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "operationId": "getActors",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            },
            "post": {
                "tags": ["Actors"],
                "summary": "Add an actor",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "operationId": "postActor",
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/Actor"
                            }
                        }
                    }
                }
            }
        },
        "/api/actors/{id}": {
            "get": {
                "tags": ["Actors"],
                "summary": "Get an actor by id",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "operationId": "getActorById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            },
            "put": {
                "tags": ["Actors"],
                "summary": "Update an actor by id",
                "responses": {
                    "200":{
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "operationId": "updateActor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json":{
                            "schema": {
                                "$ref": "#components/schemas/Actor"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Actors"],
                "summary": "Delete an actor by id",
                "responses": {
                    "204":{
                        "description": "Successfully deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "operationId": "deleteActor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ]
            }
        }
    }
}
